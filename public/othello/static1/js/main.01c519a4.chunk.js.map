{"version":3,"sources":["Store.js","component/common/Form.js","helpers/utility.js","component/HOC/generatorFormItem.js","component/common/FormInput.js","component/common/FormButton.js","component/ModalFormName.js","component/ListRoom.js","helpers/entity/mobx.js","component/Board.js","App.js","serviceWorker.js","index.js"],"names":["src_Store","observable","Array","fill","map","action","value","_this","visibleModalName","name","CustomForm","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","onSubmit","getForm","this","react_default","a","createElement","es_form","children","Component","childContextTypes","PropTypes","object","isRequired","Form","create","removeProp","key","arguments","length","undefined","newProps","Object","keys","objectSpread","forEach","keyProp","generatorFormItem","WrappedComponent","FormItem","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","getFieldDecorator","context","_this$props","onChange","defaultValue","rules","options","initialValue","Item","contextTypes","InputComponent","Input","FormInput","getValue","getFieldValue","setValue","setFieldsValue","defineProperty","clear","addSuffixClearValueToProps","beforeProps","component","keyComponent","React","cloneElement","addPropsComponent","onClick","suffix","suffixClear","FormButton","es_button","ModalFormName","observer","modal","title","visible","store","footer","closable","submitModalName","FormInput_FormInput","placeholder","required","message","style","display","justifyContent","alignItems","FormButton_FormButton","type","htmlType","ListRoom","joinRoom","status","renderRoom","room","col","span","className","id","_this2","es_row","gutter","rooms","index","isUndefined","data","isNull","XX","YY","evaluateMove","board","chessman","reverseChessman","x","y","xMove","yMove","count","x1","y1","isBlack","onClickCell","move","console","log","reverseCell","xx","yy","isClick","createFences","fences","removeObservable","dataInput","slice","isArray","item","entries","reduce","acc","_ref","_ref2","slicedToArray","i","j","k","isAvailableMove","moves","push","row","indexX","cell","indexY","Header","Layout","Sider","Content","App","component_ModalFormName","layout","color","fontSize","fontWeight","textAlign","width","background","padding","flexDirection","avatar","size","icon","marginTop","divider","margin","minWidth","minHeight","height","borderRadius","component_ListRoom","Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static1/js/main.01c519a4.chunk.js","sourcesContent":["import {observable, action} from \"mobx\";\n\nclass Store {\n    @observable visibleModalName = true;\n    @observable name = '';\n\n    @observable status = \"choose room\";\n\n    @observable rooms = new Array(20);\n    @observable board = (new Array(8).fill(null)).map(() => new Array(8).fill(null));\n\n    @action\n    submitModalName = (value) => {\n        this.visibleModalName = false;\n        this.name = value.name;\n    }\n}\n\nexport default new Store();","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"antd\";\n\nclass CustomForm extends Component {\n  getChildContext() {\n    return {\n      form: this.props.form\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onSubmit(values);\n      }\n    });\n  };\n\n  getForm = () => {\n    return this.props.form;\n  };\n\n  render() {\n    return <Form onSubmit={this.handleSubmit}>{this.props.children}</Form>;\n  }\n}\n\nCustomForm.childContextTypes = {\n  form: PropTypes.object.isRequired\n};\n\nCustomForm.propTypes = {\n  className: PropTypes.string,\n  rules: PropTypes.array,\n  onSubmit: PropTypes.func\n};\n\nexport default Form.create()(CustomForm);\n","import React from \"react\";\n\nexport function URL_add_parameter(param, value) {\n    let hash = {};\n    let url = window.location.href;\n\n    let parameters = url.split(/\\?|&/);\n\n    for (let i = 0; i < parameters.length; i++) {\n        if (!parameters[i]) continue;\n\n        let ary = parameters[i].split(\"=\");\n        hash[ary[0]] = ary[1];\n    }\n\n    hash[param] = value;\n\n    let list = [];\n    Object.keys(hash).forEach(function (key) {\n        if (hash[key]) {\n            list.push(key + \"=\" + hash[key]);\n        }\n    });\n\n    url = window.location.pathname + \"?\" + list.join(\"&\");\n    return url;\n}\n\nexport function reload_url(url) {\n    window.location.href = url;\n}\n\nexport function isEmpty(data) {\n    return data == undefined || data == null || data == \"\";\n}\n\n/**\n * Add props to component\n * @param {*} beforeProps\n * @param {*} props\n * @param {*} component\n * @param {*} keyComponent\n */\nexport function addPropsComponent(beforeProps, props = {}, component = null, keyComponent = null) {\n    if (component && keyComponent) {\n        component = React.cloneElement(component, props);\n        return {\n            ...beforeProps,\n            [keyComponent]: component\n        };\n    }\n    return beforeProps;\n}\n\n/**\n * remove property in props\n * @param {*} props\n * @param {*} key\n */\nexport function removeProp(props, key = null) {\n    let newProps = {};\n    if (key) {\n        Object.keys({...props}).forEach((keyProp) => {\n            if (keyProp !== key) {\n                newProps[keyProp] = props[keyProp];\n            }\n        });\n        return newProps;\n    }\n    return props;\n\n}\n\nexport function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function formatPagination(pagination) {\n    return {\n        pageSize: parseInt(pagination.per_page),\n        current: pagination.current_page,\n        total: pagination.total\n    };\n}\n\n/**\n * convert data sort of ant table with server sort\n * @param {*} sorter sorter of ant table\n * @param {*} key key of object need sort in server\n */\nexport function formatSortTable(sorter, key) {\n    if (key == sorter.field) {\n        if (sorter.order == \"ascend\") return \"asc\";\n        else {\n            return \"desc\";\n        }\n    }\n    return \"\";\n}\n\n/**\n *\n * @param location = props.location\n * @param key params\n * @returns {string || null} value params\n */\n\nexport function redirectURL(url) {\n    window.location.replace(url);\n}\n\n\nexport function getLastArr(arr) {\n    if (!isEmptyArr(arr)) {\n        return arr[arr.length - 1];\n    }\n    return null;\n}\n\nexport function getFirstArr(arr) {\n    if (!isEmptyArr(arr)) {\n        return arr[0];\n    }\n    return null;\n}\n\nexport function isEmptyArr(arr) {\n    if (arr && arr.length > 0) {\n        return false;\n    }\n    return true;\n}\n\nexport function isMobile() {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n}\n\n/**\n *\n * @param array array need to check\n * @param item empty if use filter custom\n * @param key empty if use filter custom\n * @param filter filter custom\n * @returns {boolean}\n */\nexport function isExistArray(array, item, key, filter) {\n    if (!isEmptyArr(array) && !isEmpty(item) && !isEmpty(key)) {\n        if (filter) {\n            return array.filter(filter).length > 0;\n        } else {\n            return array.filter((dataItem) => dataItem[key] == item[key]).length > 0;\n        }\n    }\n\n    return false;\n}\n\nexport function convertUrlImageBackground(url) {\n    return `url(${url}) center center / cover`;\n}\n\nexport function clearArray(arr) {\n    while (arr.length) {\n        arr.pop();\n    }\n}\n\nexport function linkRoute(rootLink, data) {\n    let link = rootLink;\n    Object.keys(data).forEach((key) => {\n        const re = new RegExp(`:${key}`, 'g');\n        link = link.replace(re, data[key]);\n    });\n\n    return link;\n}\n\nexport function checkLink(routeLink, link) {\n    return routeLink == link;\n}\n\n/**\n * get value of object with string key\n * @param object example: {post: {creator: 'A'}}\n * @param strKey example: \"post.creator\"\n * @returns {*} example: A\n */\n\nexport function getValueObjectFromStringKey(object, strKey) {\n    let arrKey = strKey.split('.');\n    let objectData = {...object};\n    arrKey.forEach((key) => {\n        if (isEmpty(objectData)) return;\n\n        objectData = objectData[key];\n    });\n    return objectData;\n}\n\nexport function randomStr() {\n    let text = \"\";\n    let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (let i = 0; i < 32; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n\n}","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Form} from \"antd\";\nimport {removeProp} from \"../../helpers/utility\";\n\nconst generatorFormItem = () => {\n    return WrappedComponent => {\n        class FormItem extends Component {\n            static contextTypes = {\n                form: PropTypes.object.isRequired\n            };\n\n            constructor(props) {\n                super(props);\n            }\n\n            render() {\n                const {getFieldDecorator} = this.context.form;\n                const {onChange, defaultValue, rules, name} = this.props;\n\n                const options = {};\n\n                if (rules) {\n                    options.rules = rules;\n                }\n\n                if (onChange) {\n                    options.onChange = onChange;\n                }\n\n                if (defaultValue) {\n                    options.initialValue = defaultValue;\n                }\n\n                const props = removeProp(this.props, 'defaultValue');\n\n                return (\n                    <Form.Item>\n                        {getFieldDecorator(name, options)(\n                            <WrappedComponent {...props}>\n                                {this.props.children}\n                            </WrappedComponent>\n                        )}\n                    </Form.Item>\n                );\n            }\n        }\n\n        return FormItem;\n    };\n};\n\nexport default generatorFormItem;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport generatorFormItem from \"../HOC/generatorFormItem\";\nimport {Input} from \"antd\";\nimport {addPropsComponent, removeProp} from \"../../helpers/utility\";\n\nconst InputComponent = generatorFormItem()(Input);\n\nexport default class FormInput extends Component {\n    static propTypes = {\n        rules: PropTypes.array,\n        name: PropTypes.string.isRequired,\n        defaultValue: PropTypes.string,\n        suffixClear: PropTypes.bool //check clear value of input when click suffix\n    };\n\n    static contextTypes = {\n        form: PropTypes.object.isRequired\n    };\n\n    getValue = () => {\n        return this.context.form.getFieldValue(this.props.name);\n    };\n\n    setValue = value => {\n        this.context.form.setFieldsValue({[this.props.name]: value});\n    };\n\n    //event clear value input\n    clear = () => {\n        this.setValue(\"\");\n    };\n\n    //add suffix clear when click suffix\n    addSuffixClearValueToProps = beforeProps => {\n        const value = this.getValue() === undefined ? beforeProps.defaultValue : this.getValue();\n\n        beforeProps = removeProp(beforeProps, \"suffixClear\");\n\n        if (value) {\n            let props = {\n                onClick: () => {\n                    this.clear();\n                }\n            };\n\n            // add props to suffix\n            return addPropsComponent(beforeProps, props, this.props.suffix, \"suffix\");\n        } else {\n            //remove suffix in props\n            return removeProp(beforeProps, \"suffix\");\n        }\n    };\n\n    render() {\n        const {suffixClear, suffix} = this.props;\n        let props = {...this.props};\n\n        if (suffixClear && suffix) {\n            props = this.addSuffixClearValueToProps(props);\n        }\n\n        return <InputComponent {...props} />;\n    }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form } from \"antd\";\n\nexport default class FormButton extends Component {\n  static propTypes = {\n    type: PropTypes.string,\n    htmlType: PropTypes.string,\n    size: PropTypes.string,\n    className: PropTypes.string\n  };\n\n  render() {\n    return (\n      <Form.Item>\n        <Button {...this.props}>{this.props.children}</Button>\n      </Form.Item>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Modal} from \"antd\";\nimport Form from \"./common/Form\";\nimport FormInput from \"./common/FormInput\";\nimport FormButton from \"./common/FormButton\";\nimport {observer} from \"mobx-react\";\nimport store from \"../Store\";\n\n@observer\nclass ModalFormName extends Component {\n    render() {\n        return (\n            <Modal\n                title=\"Điền tên của bạn\"\n                visible={store.visibleModalName}\n                footer={null}\n                closable={false}\n            >\n                <Form onSubmit={store.submitModalName}>\n                    <FormInput\n                        name=\"name\"\n                        suffixClear\n                        placeholder=\"Nhập tên của bạn\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Vui lòng nhập tên của bạn!\"\n                            }\n                        ]}\n\n                    />\n                    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                        <FormButton\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                        >\n                            Đồng ý\n                        </FormButton>\n                    </div>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default ModalFormName;\n","import React, {Component} from 'react';\nimport {observer} from \"mobx-react\";\nimport store from \"../Store\";\nimport {Col, Row} from 'antd';\n\n\n@observer\nclass ListRoom extends Component {\n\n    joinRoom = () => {\n        store.status = \"playing\"\n    };\n\n    renderRoom = (room) => {\n        return (\n            <Col span={4}>\n                <div className=\"room\" onClick={this.joinRoom}>\n                    <div className=\"room-empty\">\n                        <div className=\"text\">\n                            0/2\n                        </div>\n                    </div>\n                    <div className=\"room-name\">\n                        Phòng {room.id}\n                    </div>\n                </div>\n\n            </Col>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n\n                <Row gutter={24}>\n                    {\n                        store.rooms.map((room, index) => {\n                            room = {id: index};\n                            return this.renderRoom(room);\n                        })\n                    }\n                </Row>\n            </div>\n\n        );\n    }\n}\n\nexport default ListRoom;\n","function isUndefined(data) {\n    return data === undefined;\n}\n\nfunction isNull(data) {\n    return data == null;\n}\n\nfunction isNotValue(data) {\n    return data == \"\";\n}\n\nfunction isEmpty(data) {\n    return isUndefined(data) || isNull(data) || isNotValue(data);\n}\n\nexport function removeObservable(dataInput) {\n\n    if (isUndefined(dataInput)) return undefined;\n\n    if (isNull(dataInput)) return null;\n\n    if (dataInput.slice && Array.isArray(dataInput.slice())) {\n        return dataInput.map((item) => {\n            return removeObservable(item);\n        });\n    }\n\n    if ((typeof dataInput) === 'object') {\n        return Object.entries(dataInput).reduce((acc, [key, value]) => {\n            return {...acc, [key]: removeObservable(value)};\n        }, {});\n    }\n\n    return dataInput;\n}","import React, {Component} from 'react';\nimport {observer} from \"mobx-react\";\nimport store from \"../Store\";\nimport {removeObservable} from \"../helpers/entity/mobx\";\n\nconst XX = [-1, -1, -1, 1, 1, 1, 0, 0];\nconst YY = [-1, 0, 1, -1, 0, 1, -1, 1];\n\nfunction evaluateMove(board, chessman, reverseChessman, x, y, xMove, yMove) {\n    let count = 0;\n    let x1 = x + xMove;\n    let y1 = y + yMove;\n    while (true) {\n        if (!(0 <= x1 && x1 < 8 && 0 <= y1 && y1 < 8)) {\n            return false;\n        }\n\n        if (board[x1][y1] == reverseChessman) {\n            count++;\n        } else {\n            if (board[x1][y1] == chessman) {\n                break;\n            } else {\n                return false;\n            }\n\n        }\n        x1 = x1 + xMove;\n        y1 = y1 + yMove;\n    }\n\n    if (count > 0) {\n        return true;\n    }\n\n    return false;\n\n}\n\nfunction reverseCell(board, chessman, reverseChessman, x, y, xMove, yMove) {\n    console.log(xMove + \",\", yMove);\n    let x1 = x + xMove;\n    let y1 = y + yMove;\n    while (true) {\n\n        if (!(0 <= x1 && x1 < 8 && 0 <= y1 && y1 < 8)) {\n            return;\n        }\n\n        if (board[x1][y1] == reverseChessman) {\n            console.log(board);\n            board[x1][y1] = chessman;\n        } else {\n            if (board[x1][y1] == chessman) {\n                break;\n            } else {\n                return;\n            }\n\n        }\n        x1 = x1 + xMove;\n        y1 = y1 + yMove;\n    }\n}\n\n@observer\nclass ListRoom extends Component {\n    constructor(props) {\n        super(props);\n        store.board[3][3] = 2;\n        store.board[3][4] = 1;\n        store.board[4][3] = 1;\n        store.board[4][4] = 2;\n    }\n\n    isBlack = true;\n    onClickCell = (x, y, move) => {\n        console.log(\"onclick\" + x + y);\n        if (this.isBlack) {\n            store.board[x][y] = 1;\n        } else {\n            store.board[x][y] = 2;\n        }\n\n        move.forEach((data) => {\n            console.log(\"reverse: \", data);\n            reverseCell(store.board, this.isBlack ? 1 : 2, this.isBlack ? 2 : 1, x, y, data.xx, data.yy);\n        });\n\n        this.isBlack = !this.isBlack;\n    }\n\n    isClick = (x, y, chessman) => {\n\n    };\n\n    createFences = () => {\n        let fences = removeObservable(store.board);\n        console.log(fences);\n        for (let i = 0; i < 8; i++) {\n            for (let j = 0; j < 8; j++) {\n                if (fences[i][j] == 1 || fences[i][j] == 2) {\n                    for (let k = 0; k < 8; k++) {\n                        if (0 <= i + XX[k] && i + XX[k] < 8 && 0 <= j + YY[k] && j + YY[k] < 8 && !fences[i + XX[k]][j + YY[k]]) {\n                            fences[i + XX[k]][j + YY[k]] = -1;\n                        }\n                    }\n\n                }\n            }\n        }\n\n        return fences;\n    }\n\n    isAvailableMove = (fences, board, chessman) => {\n        let moves = new Array(8).fill(null).map(() => new Array(8));\n        let reverseChessman;\n        if (chessman == 1) {\n            reverseChessman = 2;\n        } else {\n            reverseChessman = 1;\n        }\n\n        for (let i = 0; i < 8; i++) {\n            for (let j = 0; j < 8; j++) {\n                if (fences[i][j] == -1) {\n                    for (let k = 0; k < 8; k++) {\n                        let isEvaluateMove = evaluateMove(board, chessman, reverseChessman, i, j, XX[k], YY[k]);\n                        // console.log(\"\" + (i + XX[k]) + \", \" + (j + YY[k]) + \": \" + isEvaluateMove);\n                        if (isEvaluateMove) {\n                            fences[i][j] = -2;\n                            if (moves[i][j] == undefined) {\n                                moves[i][j] = [];\n                            }\n                            moves[i][j].push({xx: XX[k], yy: YY[k]});\n                        }\n                    }\n                    // console.log(\"-----------\");\n                }\n            }\n        }\n        return moves;\n    }\n\n    render() {\n        let fences = this.createFences();\n        const moves = this.isAvailableMove(fences, store.board, this.isBlack ? 1 : 2);\n        // console.log(moves);\n        return (\n            <div className=\"board-game\">\n                {\n                    store.board.map((row, indexX) => {\n                        return (\n                            <div className=\"board-row\" key={indexX}>\n                                {\n                                    row.map((cell, indexY) => {\n                                        return (\n                                            <div\n                                                className=\"cell-game\"\n                                                key={indexY}\n                                                onClick={() => {\n                                                    if (moves[indexX][indexY]) {\n                                                        this.onClickCell(indexX, indexY, moves[indexX][indexY]);\n                                                    }\n                                                }}>\n                                                {\n                                                    cell == 1 ? <div className=\"dot-black\"/> :\n                                                        cell == 2 ? <div className=\"dot-white\"/> :\n                                                            <div\n                                                                className={(moves[indexX][indexY] ? (this.isBlack ? \"hover-black\" : \"hover-white\") : \"not-allowed\")}/>\n                                                }\n\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        )\n\n                    })\n                }\n            </div>\n\n        );\n    }\n}\n\nexport default ListRoom;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {observer} from \"mobx-react\";\nimport store from \"./Store\";\nimport ModalFormName from \"./component/ModalFormName\";\nimport {Avatar, Divider, Layout} from 'antd';\nimport ListRoom from \"./component/ListRoom\";\nimport Board from \"./component/Board\";\n\nconst {Header, Sider, Content} = Layout;\n\n@observer\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <ModalFormName/>\n                <Layout className=\"layout\">\n                    <Header>\n                        <div style={{color: '#fff', fontSize: '22px', fontWeight: 'bold', textAlign: 'center'}}>\n                            Chọn phòng\n                        </div>\n                    </Header>\n                    <Layout>\n                        <Sider width={200} style={{background: '#fff'}}>\n                            <div style={{\n                                padding: 20,\n                                display: 'flex',\n                                alignItems: 'center',\n                                flexDirection: 'column'\n                            }}>\n                                <Avatar size={100} icon=\"user\"/>\n                                <div style={{marginTop: 20}}>\n                                    Xin chào,\n                                </div>\n                                <div style={{fontWeight: 'bold'}}>{store.name}</div>\n                                <Divider/>\n                            </div>\n\n                        </Sider>\n                        <Content\n                            style={{\n                                background: '#e2e2e2',\n                                padding: 24,\n                                margin: 0,\n                                minWidth: '800px',\n                                minHeight: 'calc(100vh - 64px)'\n                            }}>\n                            <div style={{\n                                background: '#fff',\n                                width: '100%',\n                                height: '100%',\n                                padding: 24,\n                                borderRadius: '10px',\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center'\n                            }}>\n                                {\n                                    store.status == \"choose room\" ? <ListRoom/> : <Board/>\n                                }\n\n\n                            </div>\n                        </Content>\n                    </Layout>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}